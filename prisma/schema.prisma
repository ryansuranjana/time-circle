// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement()) 
  nickname  String      @db.VarChar(30)
  email     String      @unique
  password  String
  groups    CircleMember[]
  schedules Schedules[]
  token     String?     @map("token")
  createdAt DateTime @db.DateTime(0) @default(now()) @map("created_at")

  @@map("users")
}

model Circle {
  id              Int        @id @default(autoincrement())
  code            String        @unique @db.VarChar(10)
  invitationCode  String        @unique @db.VarChar(10) @map("invitation_code")
  name            String
  members         CircleMember[]
  createdAt       DateTime @db.DateTime(0) @default(now()) @map("created_at")

  @@map("circles")
}

model CircleMember {
  id        Int   @id @default(autoincrement())
  userId    Int   @map("user_id")
  circleId  Int   @map("group_id")

  user      User     @relation(fields: [userId], references: [id])
  circle     Circle    @relation(fields: [circleId], references: [id])

  @@unique([userId, circleId])
  @@map("circle_members")
}

model Schedules {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  date      DateTime @db.Date @map("date")
  startTime DateTime @db.DateTime(0) @map("start_time")
  endTime   DateTime @db.DateTime(0) @map("end_time")
  createdAt DateTime @db.DateTime(0) @default(now()) @map("created_at")

  user      User     @relation(fields: [userId], references: [id])
  @@map("schedules")
}
